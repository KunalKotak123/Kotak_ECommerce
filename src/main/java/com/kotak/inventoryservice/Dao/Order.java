package com.kotak.inventoryservice.Dao;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.kotak.inventoryservice.Enums.OrderStatus;
import lombok.Data;
import lombok.Setter;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

@DynamoDbBean
@Data
public class Order {
    public static final String TABLE_NAME = "order";

    private String id;
    private BigDecimal price;
    @Setter
    private String status;
    private String createdAt;
    private String updatedAt;
    private List<ProductDetails> products;

    public Order() {
        this.id = UUID.randomUUID().toString();
    }

    @DynamoDbPartitionKey
    public String getId() {
        return id;
    }

    @DynamoDBAttribute(attributeName = "price")
    public BigDecimal getPrice() {
        return price;
    }

    @DynamoDBAttribute(attributeName = "products")
    public List<ProductDetails> getProducts() {
        return products;
    }

    @DynamoDBAttribute(attributeName = "status")
    public String getStatus() {
        return (status == null || status.isBlank() || status.isEmpty()) ?
                OrderStatus.PENDING.getValue() :
                status;
    }

    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    public String getUpdatedAt() {
        return getTime();
    }

    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    public String getCreatedAt() {
        return (status == null || status.isBlank() || status.isEmpty()) ?
                getTime() : createdAt;
    }

    private static String getTime() {
        return LocalDateTime.now().toString();
    }

}

